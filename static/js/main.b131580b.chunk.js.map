{"version":3,"sources":["components/Chat.jsx","components/Login.jsx","components/Loading.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Chat","props","messageRef","useEffect","scrollIntoView","smooth","useState","value","setValue","useContext","Context","auth","firestore","useAuthState","user","useCollectionData","collection","messages","chatRef","React","createRef","sendMessage","a","undefined","add","uid","userName","displayName","messageText","messageId","Date","now","sendMessageEnter","event","code","preventDefault","className","ref","sort","b","map","message","index","messageStyle","backgroundColor","color","el","style","TextField","onKeyDown","onChange","target","id","label","variant","multiline","maxRows","marginBottom","inputProps","fontSize","fontWeight","fontFamily","InputLabelProps","Button","onClick","marginRight","signOut","Login","firebase","login","provider","GoogleAuthProvider","signInWithPopup","Loading","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createContext","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.b131580b.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport { Context } from '..';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\n\r\nconst Chat = (props) => {\r\n  let messageRef;\r\n  useEffect(() => {\r\n    if (messageRef) {\r\n      messageRef.scrollIntoView({smooth:\"scroll-behavior\"});\r\n    }\r\n  })\r\n\r\n  const [value, setValue] = useState();\r\n  const {auth, firestore} = useContext(Context)\r\n  const [user] = useAuthState(auth);\r\n  const [messages] = useCollectionData(\r\n    firestore.collection('messages')\r\n  )\r\n  const chatRef = React.createRef()\r\n  const sendMessage = async () => {\r\n    if (value === \"\" || value === undefined) {return}\r\n    firestore.collection('messages').add({\r\n      uid: user.uid,\r\n      userName: user.displayName,\r\n      messageText: value,\r\n      messageId: Date.now()\r\n    })\r\n    setValue(\"\")\r\n  }\r\n  const sendMessageEnter = async (event) => {\r\n    if (event.code !== \"Enter\") {return}\r\n    event.preventDefault()\r\n    if (value === \"\" || value === undefined) {return}\r\n    firestore.collection('messages').add({\r\n      uid: user.uid,\r\n      userName: user.displayName,\r\n      messageText: value,\r\n      messageId: Date.now()\r\n    })\r\n    setValue(\"\")\r\n  }\r\n  return (\r\n    <div className=\"chat\" ref={chatRef}>\r\n      <h1>Welcome to chat!</h1>\r\n      <div className=\"chat-box\">\r\n        {\r\n          messages ? \r\n          messages.sort((a, b) => a.messageId - b.messageId).map((message, index) => {\r\n            let messageStyle;\r\n            if (user.uid === message.uid) {\r\n              messageStyle = {\r\n                backgroundColor: \"rgb(138, 138, 240)\",\r\n                color: \"white\"\r\n              }\r\n            } else {\r\n              messageStyle = {\r\n                backgroundColor: \"rgb(230, 228, 228)\"\r\n              }\r\n            }\r\n            return (\r\n              <>\r\n              <div className=\"chat-message\" key={index}\r\n              ref={(el) => { messageRef = el }}>\r\n                <div\r\n                  className=\"chat-message-name\"\r\n                  style={messageStyle}>\r\n                  {message.userName}\r\n                </div>\r\n                <div className=\"chat-message-text\">\r\n                  {message.messageText}\r\n                </div>\r\n              </div>\r\n              <div ref={chatRef} />\r\n              </>\r\n            );\r\n          })\r\n          :\r\n          <></>\r\n        }\r\n      </div>\r\n      <TextField \r\n      onKeyDown={sendMessageEnter}\r\n      onChange={(event) => setValue(event.target.value)}\r\n      value={value}\r\n      id=\"outlined-basic\"\r\n      className=\"chat-area\"\r\n      label=\"Message\" \r\n      variant=\"outlined\"\r\n      multiline \r\n      maxRows={4}\r\n      style={{\r\n        marginBottom: 10\r\n      }}\r\n      inputProps={{style: {fontSize: 18, fontWeight: 900,\r\n      fontFamily: 'Roboto'}}}\r\n      InputLabelProps={{style: {fontSize: 15, fontWeight: 900}}} // font size of input label\r\n      />\r\n    <Button \r\n    onClick={sendMessage}\r\n    variant=\"contained\"\r\n    style={{\r\n      marginRight: 10,\r\n      fontSize: 15, \r\n      fontWeight: 900,\r\n      fontFamily: 'Roboto'\r\n    }}>SEND</Button>\r\n    <Button \r\n    onClick={() => auth.signOut()}\r\n    style={{\r\n      marginRight: 10,\r\n      fontSize: 15, \r\n      fontWeight: 900,\r\n      fontFamily: 'Roboto'\r\n    }}\r\n    color=\"error\"\r\n    variant=\"outlined\">LEAVE</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat","import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../index';\r\n\r\nconst Login = (props) => {\r\n  const {firebase, auth} = useContext(Context)\r\n  const login = async () => {\r\n    try {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      const {user} = await auth.signInWithPopup(provider);\r\n    } catch {\r\n      return\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <Button \r\n      onClick={login}\r\n      variant=\"contained\"\r\n      style={{\r\n        marginRight: 10,\r\n        fontSize: 20, \r\n        fontWeight: 900,\r\n        fontFamily: 'Roboto'\r\n      }}\r\n      >Log in with google</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n// log in with google","import React from \"react\";\r\n\r\nconst Loading = (props) => {\r\n  return (\r\n    <div className=\"lds-roller\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\nimport './App.css';\nimport Chat from './components/Chat';\nimport Login from './components/Login';\nimport Loading from './components/Loading';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { useContext } from 'react';\nimport { Context } from './index';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction App() {\n  const {firebase ,auth, firestore} = useContext(Context)\n  const [user, loading] = useAuthState(auth);\n  if (loading) {\n    return (\n    <div className=\"container\">\n      <Loading />\n    </div>\n    )\n  }\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        {\n          user ? \n          <>\n        <Routes>\n          <Route path='/chat' element={<Chat/>}/>\n          <Route path='' element={<Chat/>}/>\n        </Routes>\n        </>\n        :\n        <>\n        <Routes>\n          <Route path='/login' element={<Login />}/>\n          <Route path='' element={<Login />}/>\n        </Routes>\n        </>\n        }\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDxLZOm0Clw7_rzTcFXnJi1VKPpiTSJTM0\",\n  authDomain: \"react-chat-f0c9d.firebaseapp.com\",\n  projectId: \"react-chat-f0c9d\",\n  storageBucket: \"react-chat-f0c9d.appspot.com\",\n  messagingSenderId: \"1052476625633\",\n  appId: \"1:1052476625633:web:c0c5e16d19673351705da0\",\n  measurementId: \"G-LQW3HX1E8T\"\n};\nexport const Context = createContext(null);\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context.Provider value={{\n      firebase,\n      auth,\n      firestore,\n    }}>\n      <App />\n    </Context.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}